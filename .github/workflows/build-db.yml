name: Build DB

on:
  push:
    branches:
      # - develop
      - rel-*
      - release-*
      - db-*
      - github-actions-*
    tags:
      - db-v*
    paths:
      - package/db/**
      - .github/workflows/build-db.yml
  pull_request:
    branches:
      # - develop
      - rel-*
      - release-*
    paths:
      - package/db/**
      - .github/workflows/build-db.yml

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone fiftyone
        uses: actions/checkout@v1
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
      - name: Set environment
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          if [[ $RELEASE_TAG =~ ^refs\/tags\/db-v.*-rc\..*$ ]]; then
             echo "RELEASE_VERSION=$(echo "${{ github.ref }}" | sed "s/^refs\/tags\/db-v//")" >> $GITHUB_ENV
          fi
      - name: Build wheel (macOS)
        run: |
          cd package/db
          python setup.py bdist_wheel --plat-name mac
      - name: Build wheel (Windows)
        run: |
          cd package/db
          python setup.py bdist_wheel --plat-name win
      - name: Build wheel (Linux)
        run: |
          cd package/db
          python setup.py bdist_wheel --plat-name linux-x86_64
          python setup.py bdist_wheel --plat-name linux-aarch64
      - name: Build wheel (Ubuntu 16.04 x86_64)
        env:
          FIFTYONE_DB_BUILD_LINUX_DISTRO: ubuntu1604
        run: |
          cd package/db
          python setup.py bdist_wheel --plat-name linux-x86_64
      - name: Build wheel (Debian 9 x86_64)
        env:
          FIFTYONE_DB_BUILD_LINUX_DISTRO: debian9
        run: |
          cd package/db
          python setup.py bdist_wheel --plat-name linux-x86_64
      - name: Upload wheel (linux-86_64)
        uses: actions/upload-artifact@v2
        with:
          name: wheel-linux-x86_64
          path: package/db/dist/fiftyone_db-*linux1_x86_64.whl
      - name: Upload wheel (linux-aarch64)
        uses: actions/upload-artifact@v2
        with:
          name: wheel-linux-aarch64
          path: package/db/dist/fiftyone_db-*linux2014_aarch64.whl
      - name: Upload wheel (Ubuntu 16.04)
        uses: actions/upload-artifact@v2
        with:
          name: wheel-ubuntu1604
          path: package/db/dist/*ubuntu1604*.whl
      - name: Upload wheel (Debian 9)
        uses: actions/upload-artifact@v2
        with:
          name: wheel-debian9
          path: package/db/dist/*debian9*.whl
      - name: Upload wheel (macOS)
        uses: actions/upload-artifact@v2
        with:
          name: wheel-macos
          path: package/db/dist/*macos*.whl
      - name: Upload wheel (Windows)
        uses: actions/upload-artifact@v2
        with:
          name: wheel-windows
          path: package/db/dist/*win*.whl

  test:
    runs-on: ubuntu-20.04
    needs: build
    env:
      FIFTYONE_DO_NOT_TRACK: true
    steps:
      - name: Clone fiftyone
        uses: actions/checkout@v1
      - name: Download fiftyone-db wheel
        uses: actions/download-artifact@v2
        with:
          name: wheel-linux
          path: downloads
      - name: Install fiftyone-db
        run: |
          pip3 install downloads/*.whl
      - name: Install test dependencies
        run: |
          pip3 install pytest
      - name: Run tests
        run: |
          cd package/db/
          python3 -m pytest --verbose tests/

  publish:
    runs-on: ubuntu-20.04
    needs: [build, test]
    if: startsWith(github.ref, 'refs/tags/db-v')
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          path: downloads
      - name: Install dependencies
        run: |
          pip install twine
      - name: Set environment
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          if [[ $RELEASE_TAG =~ ^refs\/tags\/db-v.*-rc\..*$ ]]; then
             echo "TWINE_PASSWORD=${{ secrets.FIFTYONE_TEST_PYPI_TOKEN }}" >> $GITHUB_ENV
             echo "TWINE_REPOSITORY=testpypi" >> $GITHUB_ENV
          else
             echo "TWINE_PASSWORD=${{ secrets.FIFTYONE_PYPI_TOKEN }}" >> $GITHUB_ENV
             echo "TWINE_REPOSITORY=pypi" >> $GITHUB_ENV
          fi
      - name: Upload to pypi
        env:
          TWINE_USERNAME: __token__
          TWINE_NON_INTERACTIVE: 1
        run: |
          python -m twine upload downloads/wheel-*/*.whl
